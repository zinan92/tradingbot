name: Contract Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  PACT_BROKER_URL: ${{ secrets.PACT_BROKER_URL || 'http://localhost:9292' }}
  PACT_BROKER_USERNAME: ${{ secrets.PACT_BROKER_USERNAME || 'pact' }}
  PACT_BROKER_PASSWORD: ${{ secrets.PACT_BROKER_PASSWORD || 'pact' }}

jobs:
  consumer-tests:
    name: Consumer Contract Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web/frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: web/frontend
      run: npm ci
    
    - name: Run consumer contract tests
      working-directory: web/frontend
      run: |
        mkdir -p logs
        npm run test:pact
    
    - name: Upload pact files
      uses: actions/upload-artifact@v3
      with:
        name: pact-files
        path: web/frontend/pacts/
        retention-days: 7
    
    - name: Publish pacts to broker
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
      working-directory: web/frontend
      run: |
        export GIT_BRANCH=${GITHUB_REF#refs/heads/}
        npm run pact:publish
      env:
        PACT_BROKER_URL: ${{ env.PACT_BROKER_URL }}
        PACT_BROKER_USERNAME: ${{ env.PACT_BROKER_USERNAME }}
        PACT_BROKER_PASSWORD: ${{ env.PACT_BROKER_PASSWORD }}

  provider-verification:
    name: Provider Contract Verification
    runs-on: ubuntu-latest
    needs: consumer-tests
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tradingbot_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pact-python pytest-asyncio
    
    - name: Download pact files
      uses: actions/download-artifact@v3
      with:
        name: pact-files
        path: web/frontend/pacts/
    
    - name: Run provider verification
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/tradingbot_test
        ENVIRONMENT: test
      run: |
        python -m pytest tests/contracts/test_pact_provider.py -v
    
    - name: Verify against broker pacts
      if: github.ref == 'refs/heads/main'
      run: |
        python scripts/verify_broker_pacts.py
      env:
        PACT_BROKER_URL: ${{ env.PACT_BROKER_URL }}
        PACT_BROKER_USERNAME: ${{ env.PACT_BROKER_USERNAME }}
        PACT_BROKER_PASSWORD: ${{ env.PACT_BROKER_PASSWORD }}

  can-i-deploy:
    name: Can I Deploy
    runs-on: ubuntu-latest
    needs: [consumer-tests, provider-verification]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install Pact CLI
      run: |
        curl -LO https://github.com/pact-foundation/pact-ruby-standalone/releases/download/v2.0.10/pact-2.0.10-linux-x86_64.tar.gz
        tar xzf pact-2.0.10-linux-x86_64.tar.gz
        echo "$PWD/pact/bin" >> $GITHUB_PATH
    
    - name: Can I Deploy - Consumer
      run: |
        pact-broker can-i-deploy \
          --pacticipant=TradingBotUI \
          --version=$(node -p "require('./web/frontend/package.json').version") \
          --to=${GITHUB_REF#refs/heads/} \
          --broker-base-url=${{ env.PACT_BROKER_URL }} \
          --broker-username=${{ env.PACT_BROKER_USERNAME }} \
          --broker-password=${{ env.PACT_BROKER_PASSWORD }}
    
    - name: Can I Deploy - Provider
      run: |
        pact-broker can-i-deploy \
          --pacticipant=TradingBotAPI \
          --version=$(git rev-parse --short HEAD) \
          --to=${GITHUB_REF#refs/heads/} \
          --broker-base-url=${{ env.PACT_BROKER_URL }} \
          --broker-username=${{ env.PACT_BROKER_USERNAME }} \
          --broker-password=${{ env.PACT_BROKER_PASSWORD }}

  schema-drift-check:
    name: Schema Drift Detection
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web/frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: web/frontend
      run: npm ci
    
    - name: Run contract tests on base branch
      run: |
        git checkout ${{ github.base_ref }}
        cd web/frontend
        npm ci
        npm run test:pact || true
        mv pacts pacts-base
    
    - name: Run contract tests on PR branch
      run: |
        git checkout ${{ github.head_ref }}
        cd web/frontend
        npm ci
        npm run test:pact
    
    - name: Compare contracts
      working-directory: web/frontend
      run: |
        npx pact-diff pacts-base pacts > contract-diff.txt || true
        if [ -s contract-diff.txt ]; then
          echo "⚠️ Contract changes detected:" >> $GITHUB_STEP_SUMMARY
          echo '```diff' >> $GITHUB_STEP_SUMMARY
          cat contract-diff.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ No contract changes detected" >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: Comment PR with contract changes
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const diffFile = 'web/frontend/contract-diff.txt';
          
          if (fs.existsSync(diffFile) && fs.statSync(diffFile).size > 0) {
            const diff = fs.readFileSync(diffFile, 'utf8');
            const comment = `## 📝 Contract Changes Detected\n\n\`\`\`diff\n${diff}\n\`\`\`\n\nPlease ensure these changes are intentional and update provider verification tests if needed.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }