import { CanDeployOptions } from '../can-deploy';
import { MessageOptions } from '../message';
import { PublisherOptions } from '../publisher';
import { ServiceOptions } from '../service';
import { VerifierOptions } from '../verifier';
export type CliVerbOptions = {
    cliVerb: string;
};
export interface ArgumentMappings {
    [key: string]: Mapping;
}
type Mapping = string | ((val: unknown) => string[]);
export type SpawnArgument = CanDeployOptions | MessageOptions | PublisherOptions | ServiceOptions | VerifierOptions | CliVerbOptions | unknown;
export type SpawnArguments = Array<SpawnArgument> | SpawnArgument;
export declare const DEFAULT_ARG = "DEFAULT";
export declare const PACT_NODE_NO_VALUE = "PACT_NODE_NO_VALUE";
export declare class Arguments {
    toArgumentsArray(args: SpawnArguments, mappings: ArgumentMappings): string[];
    private createArgumentsFromObject;
}
declare const _default: Arguments;
export default _default;
